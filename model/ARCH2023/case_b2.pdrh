// ARCH 2023 Minimal example B, variant 2


#define TMAX 12

//Assumes dreal is in the path!

//For TMAX = 10, four-core CPU
//time ./formal_verifier -k 1 -e 0.005 --partition-prob case_b2.pdrh 
//[3.1542078837291915e-01,3.1874490430349073e-01] | 3.3241159305715806e-03

//real	0m17.561s
//user	0m41.029s
//sys	0m13.212s


//For TMAX = 12, four-core CPU
//time ./formal_verifier -k 1 -e 0.005 --partition-prob case_b2.pdrh 
//[4.6422970553476417e-01,4.6788460184513331e-01] | 3.6548963103691379e-03

//real	1m24.319s
//user	3m20.754s
//sys	0m55.525s



[-1,100] x; 
[0,100] x_2; 
[0,20] tau; // time

#define mu 5
#define sigma 1.414213562
#define pi 3.14159265359

dist_pdf(0.1 * exp((-0.1)*x_1), 0, inf, 0) x_1;
dist_normal(mu, sigma) y;

{
    mode 0;
    time: [0, 10];
    flow:
        d/dt[tau] = 1;
        d/dt[x]   = 2;
        d/dt[x_2] = 0;
    jump:
    // instead of introducing a mode and variable y, just add 2 to tau
    (and (tau = x_2) (tau < x_1) (tau < 5.8)) ==> @2 (and (x' = x) (tau' = tau + 2));
    (and (tau = x_2) (tau < x_1) (tau < 5.8)) ==> @3 (and (x' = x) (tau' = tau + 2));
}

{
    mode 2;         // goal mode
    time: [0, 10];
    flow:
        d/dt[tau] = 1;
        d/dt[x]   = -3;
        d/dt[x_2] = 0;
    jump:
}

{
    mode 3;
    time: [0, 10];
    flow:
        d/dt[tau] = 1;
        d/dt[x]   = 0;
        d/dt[x_2] = 0;
    jump:
}


init:
@0 (and (x = 0) (tau = 0) (x_2 = sqrt(y*y)));

goal:
@2 (and (tau <= TMAX) (x <= -1));
