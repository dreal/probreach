// ARCH 2023 Minimal example D, variant 1

// Assumes dReal is in the path!

// This experiment is performed on a Linux VM
// ProbReach version: 1.4 (68e9d301d88273916d7277ac592636483a26721b)
// dReal version: v3.16.05 (commit 3cc1370a5789)
// OS: Ubuntu 22.04.2 LTS
// RAM: 8GB
// CPU info: 
// 	Manufacturer: Intel Core Processor (Skylake)
//	Cache size: 16384 KB
//	Frequency (MHz): 2591.785
//
// How to run the formal approach: 
//	time ./formal_verifier -t 6 -k 1 -e 0.005 --partition-prob case_d1.pdrh
//
// Output:
//  [1.8456993919712225e-01,1.8849551525252142e-01] | 3.9255760553991714e-03
//
//  real	1m58.211s
//  user	9m23.837s
//  sys	1m51.691s
//
//
// How to run the statistical approach (Bayesian estimations algorithm, default confidence value = 0.99):
//  time ./mc_verifier -t 6 -k 1 -e 0.005 case_d1.pdrh
//
// Output:
//  [1.8063381685858132e-01,1.9063381685858133e-01] | 1.0000000000000009e-02
//
//  real	2m23.512s
//  user	11m40.649s
//  sys	2m35.628s


[-1,100] x; 
[0,20] tau; // time

dist_exp(0.1) x_1;
dist_exp(0.08) x_2;

{
    mode 0;
    time: [0, 10];
    flow:
        d/dt[tau] = 1;
        d/dt[x]   = 2;
    jump:
    (and (tau = x_2) (tau < x_1) (tau < 5.8) (x <= 6)) ==> @1 (and (x' = x) (tau' = tau));
}

{
    mode 1;         // goal mode
    time: [0, 10];
    flow:
        d/dt[tau] = 1;
        d/dt[x]   = -3;
    jump:
}


init:
@0 (and (x = 0) (tau = 0));

goal:
@1 (and (tau <= 10) (x <= -1));
