//   -----------------------------------------------------------------
//   Date: 2012/12/24
//   ----------------------------------------------------------------- 
//  Author: Hong Zhang @ PICB, SIBS, CAS
//   E-mail: hongzhang2016@gmail.com
//   -----------------------------------------------------------------
//   Produced at Signal Transduction and Biosystems Group.
//   All rights reserved.
//   ----------------------------------------------------------------
// Cell population change is represented by ordinary differential equations
model:npha;
//-----------parameters
#define gamma1 0.0033 // stem cell proliferation rate is represented by a logistic equation (self-renewal)
#define k1as 0.0131   //rate constant of one stem cell divid into one stem cell and on transit amplifying cell
#define k1s 0.00164    //rate constant of stem cell to TA cell (symmetric dividation)
#define beta1 1.97e-06  //stem cell apoptosis rate constant 
#define k_1 1e-06    //rate constant of TA turn back to stem cell
#define gamma2 0.014 //TA proliferation rate constant (self-renewal)
#define k2s 0.01729     //rate constant of TA symmetric division into two GA cell
#define k2as 0.1383     //rate constant of TA asymmetric division into one GA and one TA cell
#define beta2 2.08e-05  //TA apoptosis rate constant 
#define k_2 1e-06    //rate constant of GA turn back to TA
#define k3 0.2161    //rate constant of GA differentiate into SpC 
#define k4 0.0556    //rate constant of SpC differentiat into GC
#define k5 0.1112    //rate constant of GC differentiat into CC 
#define alpha 0.0714285714285714 //desquamation rate constant of CC
#define beta3 0.00026 // GA apoptosis rate constant
#define beta4 6.68e-05 // SpC apoptosis rate constant
#define beta5 0.000133 // GC apoptosis rate constant

//------psoriastic cell kinetic parameters
#define gamma1d 0.0132 // stem cell proliferation rate is represented by a logistic equation (self-renewal)
#define k1asd 0.0524   //rate constant of one stem cell divid into one stem cell and on transit amplifying cell
#define k1sd 0.00656    //rate constant of stem cell to TA cell (symmetric dividation)
#define beta1d 2.296e-06  //stem cell apoptosis rate constant 
#define k_1d 1e-06    //rate constant of TA turn back to stem cell
#define gamma2d 0.056 //TA proliferation rate constant (self-renewal)
#define k2sd 0.06916     //rate constant of TA symmetric division into two GA cell
#define k2asd 0.5532     //rate constant of TA asymmetric division into one GA and one TA cell
#define beta2d 2.42e-05  //TA apoptosis rate constant 
#define k_2d 1e-06    //rate constant of GA turn back to TA
#define k3d 1.0805    //rate constant of GA differentiate into SpC 
#define k4d 0.278    //rate constant of SpC differentiat into GC
#define alphad 0.285714285714286 //desquamation rate constant of CC
#define beta3d 0.0003785 // GA apoptosis rate constant
#define beta4d 9.75e-05 // SpC apoptosis rate constant

#define lambda 0.285714285714286
//#define lambda 0.4953
#define SCmax 225 
#define SCmaxt 787.5
#define omega 100
#define Pta_h 560.93100861522
#define n 3
#define kp 0.3
#define ka 19
//#define InA 53255.1

[0,2000] time;
[0,2000] tau;
[0,10000] SC; // normal stem cell
[0,10000] TA; // normal transit amplifying cell
[0,10000] GA; // normal growth arrested cell
[0,10000] SC_d; // abnormal stem cell
[0,10000] TA_d; // abnormal transit amplifying cell
[0,10000] GA_d; // abnormal growth arrested cell
//[0.2,0.5] lambda;

[55000, 65000] mu;
dist_normal(mu,10000) InA;

//dist_normal(60000,10000) InA;



{
mode 1;

time: [0,2000];

flow:
d/dt[SC] = gamma1*omega/(1+(omega-1)*((TA+TA_d)/Pta_h)^n)*(1-(SC+lambda*SC_d)/SCmax)*SC-beta1*InA*SC-k1s*omega/(1+(omega-1)*((TA+TA_d)/Pta_h)^n)*SC+k_1*TA;
d/dt[TA] = k1as*omega/(1+(omega-1)*((TA+TA_d)/Pta_h)^n)*SC+2*k1s*omega/(1+(omega-1)*((TA+TA_d)/Pta_h)^n)*SC+gamma2*TA+k_2*GA-beta2*InA*TA-k2s*TA-k_1*TA;
d/dt[GA] = (k2as+2*k2s)*TA-k_2*GA-k3*GA-beta3*GA;
d/dt[SC_d] = gamma1d*(1-(SC+SC_d)/SCmaxt)*SC_d-beta1d*InA*SC_d-k1sd*SC_d-kp*SC_d^2/(ka^2+SC_d^2)+k_1d*TA_d;
d/dt[TA_d] = k1asd*SC_d+2*k1sd*SC_d+gamma2d*TA_d+k_2d*GA_d-beta2d*InA*TA_d-k2sd*TA_d-k_1d*TA_d;
d/dt[GA_d] = (k2asd+2*k2sd)*TA_d-k_2d*GA_d-k3d*GA_d-beta3d*GA_d;
d/dt[tau] = 1;
jump:
(and (tau = 2)) ==> @2(and (SC'=SC)(TA'=TA)(GA'=GA)(SC_d'=SC_d)(TA_d'=TA_d)(GA_d'=GA_d)(tau' = 0));
}

{
mode 2;

time: [0,2000];

flow:
d/dt[SC] = gamma1*omega/(1+(omega-1)*((TA+TA_d)/Pta_h)^n)*(1-(SC+lambda*SC_d)/SCmax)*SC-beta1*SC-k1s*omega/(1+(omega-1)*((TA+TA_d)/Pta_h)^n)*SC+k_1*TA;
d/dt[TA] = k1as*omega/(1+(omega-1)*((TA+TA_d)/Pta_h)^n)*SC+2*k1s*omega/(1+(omega-1)*((TA+TA_d)/Pta_h)^n)*SC+gamma2*TA+k_2*GA-beta2*TA-k2s*TA-k_1*TA;
d/dt[GA] = (k2as+2*k2s)*TA-k_2*GA-k3*GA-beta3*GA;
d/dt[SC_d] = gamma1d*(1-(SC+SC_d)/SCmaxt)*SC_d-beta1d*SC_d-k1sd*SC_d-kp*SC_d^2/(ka^2+SC_d^2)+k_1d*TA_d;
d/dt[TA_d] = k1asd*SC_d+2*k1sd*SC_d+gamma2d*TA_d+k_2d*GA_d-beta2d*TA_d-k2sd*TA_d-k_1d*TA_d;
d/dt[GA_d] = (k2asd+2*k2sd)*TA_d-k_2d*GA_d-k3d*GA_d-beta3d*GA_d;
d/dt[tau] = 1;
jump:
(and (tau = 8/24)) ==> @1(and (SC'=SC)(TA'=TA)(GA'=GA)(SC_d'=SC_d)(TA_d'=TA_d)(GA_d'=GA_d)(tau' = 0));
}

// initial values are medians of the intervals derived by evaluating the goal (tau = 2000)
// in mode 1 by dReal-2.14.08 with precision 1e-3
init:
@1(and
		(tau = 0)
		(SC = 25.5284676372)
		(TA = 6.15050058761)
		(GA = 4.91809371079)
		(SC_d = 313.933927525)
		(TA_d = 1559.97864362)
		(GA_d = 998.034827674)
	);

goal:
//@2(and(SC <= 19)(SC_d <= 226));
//@2(and(SC <= 19)(tau = 365));
//@2(and(SC_d <= 226)(tau = 365));
@2(and(or(SC_d >= 300)(TA_d >= 1500))(tau=2000));
//@2(and(or(SC_d >= 300)(TA_d >= 1500))(tau=365));
