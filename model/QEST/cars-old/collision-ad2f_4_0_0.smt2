(set-logic QF_NRA_ODE)
(declare-fun ad1 () Real)
(declare-fun ad1_0_0 () Real)
(declare-fun ad1_0_t () Real)
(assert (>= ad1_0_0  -5.900000))
(assert (>= ad1_0_t  -5.900000))
(assert (<= ad1_0_0  5.900000))
(assert (<= ad1_0_t  5.900000))
(declare-fun ad1_1_0 () Real)
(declare-fun ad1_1_t () Real)
(assert (>= ad1_1_0  -5.900000))
(assert (>= ad1_1_t  -5.900000))
(assert (<= ad1_1_0  5.900000))
(assert (<= ad1_1_t  5.900000))
(declare-fun ad1_2_0 () Real)
(declare-fun ad1_2_t () Real)
(assert (>= ad1_2_0  -5.900000))
(assert (>= ad1_2_t  -5.900000))
(assert (<= ad1_2_0  5.900000))
(assert (<= ad1_2_t  5.900000))
(declare-fun ad1_3_0 () Real)
(declare-fun ad1_3_t () Real)
(assert (>= ad1_3_0  -5.900000))
(assert (>= ad1_3_t  -5.900000))
(assert (<= ad1_3_0  5.900000))
(assert (<= ad1_3_t  5.900000))
(declare-fun ad1_4_0 () Real)
(declare-fun ad1_4_t () Real)
(assert (>= ad1_4_0  -5.900000))
(assert (>= ad1_4_t  -5.900000))
(assert (<= ad1_4_0  5.900000))
(assert (<= ad1_4_t  5.900000))
(declare-fun ad2 () Real)
(declare-fun ad2_0_0 () Real)
(declare-fun ad2_0_t () Real)
(assert (>= ad2_0_0 (- 0.39351)))
(assert (>= ad2_0_t (- 0.39351)))
(assert (<= ad2_0_0 (- 0.39351)))
(assert (<= ad2_0_t (- 0.39351)))
(declare-fun ad2_1_0 () Real)
(declare-fun ad2_1_t () Real)
(assert (>= ad2_1_0 (- 0.39351)))
(assert (>= ad2_1_t (- 0.39351)))
(assert (<= ad2_1_0 (- 0.39351)))
(assert (<= ad2_1_t (- 0.39351)))
(declare-fun ad2_2_0 () Real)
(declare-fun ad2_2_t () Real)
(assert (>= ad2_2_0 (- 0.39351)))
(assert (>= ad2_2_t (- 0.39351)))
(assert (<= ad2_2_0 (- 0.39351)))
(assert (<= ad2_2_t (- 0.39351)))
(declare-fun ad2_3_0 () Real)
(declare-fun ad2_3_t () Real)
(assert (>= ad2_3_0 (- 0.39351)))
(assert (>= ad2_3_t (- 0.39351)))
(assert (<= ad2_3_0 (- 0.39351)))
(assert (<= ad2_3_t (- 0.39351)))
(declare-fun ad2_4_0 () Real)
(declare-fun ad2_4_t () Real)
(assert (>= ad2_4_0 (- 0.39351)))
(assert (>= ad2_4_t (- 0.39351)))
(assert (<= ad2_4_0 (- 0.39351)))
(assert (<= ad2_4_t (- 0.39351)))
(declare-fun mu1 () Real)
(declare-fun mu1_0_0 () Real)
(declare-fun mu1_0_t () Real)
(assert (>= mu1_0_0 (- 2.1)))
(assert (>= mu1_0_t (- 2.1)))
(assert (<= mu1_0_0 (- 1.9)))
(assert (<= mu1_0_t (- 1.9)))
(declare-fun mu1_1_0 () Real)
(declare-fun mu1_1_t () Real)
(assert (>= mu1_1_0 (- 2.1)))
(assert (>= mu1_1_t (- 2.1)))
(assert (<= mu1_1_0 (- 1.9)))
(assert (<= mu1_1_t (- 1.9)))
(declare-fun mu1_2_0 () Real)
(declare-fun mu1_2_t () Real)
(assert (>= mu1_2_0 (- 2.1)))
(assert (>= mu1_2_t (- 2.1)))
(assert (<= mu1_2_0 (- 1.9)))
(assert (<= mu1_2_t (- 1.9)))
(declare-fun mu1_3_0 () Real)
(declare-fun mu1_3_t () Real)
(assert (>= mu1_3_0 (- 2.1)))
(assert (>= mu1_3_t (- 2.1)))
(assert (<= mu1_3_0 (- 1.9)))
(assert (<= mu1_3_t (- 1.9)))
(declare-fun mu1_4_0 () Real)
(declare-fun mu1_4_t () Real)
(assert (>= mu1_4_0 (- 2.1)))
(assert (>= mu1_4_t (- 2.1)))
(assert (<= mu1_4_0 (- 1.9)))
(assert (<= mu1_4_t (- 1.9)))
(declare-fun s1 () Real)
(declare-fun s1_0_0 () Real)
(declare-fun s1_0_t () Real)
(assert (>= s1_0_0  0))
(assert (>= s1_0_t  0))
(assert (<= s1_0_0  500))
(assert (<= s1_0_t  500))
(declare-fun s1_1_0 () Real)
(declare-fun s1_1_t () Real)
(assert (>= s1_1_0  0))
(assert (>= s1_1_t  0))
(assert (<= s1_1_0  500))
(assert (<= s1_1_t  500))
(declare-fun s1_2_0 () Real)
(declare-fun s1_2_t () Real)
(assert (>= s1_2_0  0))
(assert (>= s1_2_t  0))
(assert (<= s1_2_0  500))
(assert (<= s1_2_t  500))
(declare-fun s1_3_0 () Real)
(declare-fun s1_3_t () Real)
(assert (>= s1_3_0  0))
(assert (>= s1_3_t  0))
(assert (<= s1_3_0  500))
(assert (<= s1_3_t  500))
(declare-fun s1_4_0 () Real)
(declare-fun s1_4_t () Real)
(assert (>= s1_4_0  0))
(assert (>= s1_4_t  0))
(assert (<= s1_4_0  500))
(assert (<= s1_4_t  500))
(declare-fun s2 () Real)
(declare-fun s2_0_0 () Real)
(declare-fun s2_0_t () Real)
(assert (>= s2_0_0  0))
(assert (>= s2_0_t  0))
(assert (<= s2_0_0  500))
(assert (<= s2_0_t  500))
(declare-fun s2_1_0 () Real)
(declare-fun s2_1_t () Real)
(assert (>= s2_1_0  0))
(assert (>= s2_1_t  0))
(assert (<= s2_1_0  500))
(assert (<= s2_1_t  500))
(declare-fun s2_2_0 () Real)
(declare-fun s2_2_t () Real)
(assert (>= s2_2_0  0))
(assert (>= s2_2_t  0))
(assert (<= s2_2_0  500))
(assert (<= s2_2_t  500))
(declare-fun s2_3_0 () Real)
(declare-fun s2_3_t () Real)
(assert (>= s2_3_0  0))
(assert (>= s2_3_t  0))
(assert (<= s2_3_0  500))
(assert (<= s2_3_t  500))
(declare-fun s2_4_0 () Real)
(declare-fun s2_4_t () Real)
(assert (>= s2_4_0  0))
(assert (>= s2_4_t  0))
(assert (<= s2_4_0  500))
(assert (<= s2_4_t  500))
(declare-fun sigma1 () Real)
(declare-fun sigma1_0_0 () Real)
(declare-fun sigma1_0_t () Real)
(assert (>= sigma1_0_0  0.1))
(assert (>= sigma1_0_t  0.1))
(assert (<= sigma1_0_0  0.3))
(assert (<= sigma1_0_t  0.3))
(declare-fun sigma1_1_0 () Real)
(declare-fun sigma1_1_t () Real)
(assert (>= sigma1_1_0  0.1))
(assert (>= sigma1_1_t  0.1))
(assert (<= sigma1_1_0  0.3))
(assert (<= sigma1_1_t  0.3))
(declare-fun sigma1_2_0 () Real)
(declare-fun sigma1_2_t () Real)
(assert (>= sigma1_2_0  0.1))
(assert (>= sigma1_2_t  0.1))
(assert (<= sigma1_2_0  0.3))
(assert (<= sigma1_2_t  0.3))
(declare-fun sigma1_3_0 () Real)
(declare-fun sigma1_3_t () Real)
(assert (>= sigma1_3_0  0.1))
(assert (>= sigma1_3_t  0.1))
(assert (<= sigma1_3_0  0.3))
(assert (<= sigma1_3_t  0.3))
(declare-fun sigma1_4_0 () Real)
(declare-fun sigma1_4_t () Real)
(assert (>= sigma1_4_0  0.1))
(assert (>= sigma1_4_t  0.1))
(assert (<= sigma1_4_0  0.3))
(assert (<= sigma1_4_t  0.3))
(declare-fun tau () Real)
(declare-fun tau_0_0 () Real)
(declare-fun tau_0_t () Real)
(assert (>= tau_0_0  0))
(assert (>= tau_0_t  0))
(assert (<= tau_0_0  60))
(assert (<= tau_0_t  60))
(declare-fun tau_1_0 () Real)
(declare-fun tau_1_t () Real)
(assert (>= tau_1_0  0))
(assert (>= tau_1_t  0))
(assert (<= tau_1_0  60))
(assert (<= tau_1_t  60))
(declare-fun tau_2_0 () Real)
(declare-fun tau_2_t () Real)
(assert (>= tau_2_0  0))
(assert (>= tau_2_t  0))
(assert (<= tau_2_0  60))
(assert (<= tau_2_t  60))
(declare-fun tau_3_0 () Real)
(declare-fun tau_3_t () Real)
(assert (>= tau_3_0  0))
(assert (>= tau_3_t  0))
(assert (<= tau_3_0  60))
(assert (<= tau_3_t  60))
(declare-fun tau_4_0 () Real)
(declare-fun tau_4_t () Real)
(assert (>= tau_4_0  0))
(assert (>= tau_4_t  0))
(assert (<= tau_4_0  60))
(assert (<= tau_4_t  60))
(declare-fun v01 () Real)
(declare-fun v01_0_0 () Real)
(declare-fun v01_0_t () Real)
(assert (>= v01_0_0  0))
(assert (>= v01_0_t  0))
(assert (<= v01_0_0  40))
(assert (<= v01_0_t  40))
(declare-fun v01_1_0 () Real)
(declare-fun v01_1_t () Real)
(assert (>= v01_1_0  0))
(assert (>= v01_1_t  0))
(assert (<= v01_1_0  40))
(assert (<= v01_1_t  40))
(declare-fun v01_2_0 () Real)
(declare-fun v01_2_t () Real)
(assert (>= v01_2_0  0))
(assert (>= v01_2_t  0))
(assert (<= v01_2_0  40))
(assert (<= v01_2_t  40))
(declare-fun v01_3_0 () Real)
(declare-fun v01_3_t () Real)
(assert (>= v01_3_0  0))
(assert (>= v01_3_t  0))
(assert (<= v01_3_0  40))
(assert (<= v01_3_t  40))
(declare-fun v01_4_0 () Real)
(declare-fun v01_4_t () Real)
(assert (>= v01_4_0  0))
(assert (>= v01_4_t  0))
(assert (<= v01_4_0  40))
(assert (<= v01_4_t  40))
(declare-fun v02 () Real)
(declare-fun v02_0_0 () Real)
(declare-fun v02_0_t () Real)
(assert (>= v02_0_0  0))
(assert (>= v02_0_t  0))
(assert (<= v02_0_0  40))
(assert (<= v02_0_t  40))
(declare-fun v02_1_0 () Real)
(declare-fun v02_1_t () Real)
(assert (>= v02_1_0  0))
(assert (>= v02_1_t  0))
(assert (<= v02_1_0  40))
(assert (<= v02_1_t  40))
(declare-fun v02_2_0 () Real)
(declare-fun v02_2_t () Real)
(assert (>= v02_2_0  0))
(assert (>= v02_2_t  0))
(assert (<= v02_2_0  40))
(assert (<= v02_2_t  40))
(declare-fun v02_3_0 () Real)
(declare-fun v02_3_t () Real)
(assert (>= v02_3_0  0))
(assert (>= v02_3_t  0))
(assert (<= v02_3_0  40))
(assert (<= v02_3_t  40))
(declare-fun v02_4_0 () Real)
(declare-fun v02_4_t () Real)
(assert (>= v02_4_0  0))
(assert (>= v02_4_t  0))
(assert (<= v02_4_0  40))
(assert (<= v02_4_t  40))
(declare-fun v1 () Real)
(declare-fun v1_0_0 () Real)
(declare-fun v1_0_t () Real)
(assert (>= v1_0_0  0))
(assert (>= v1_0_t  0))
(assert (<= v1_0_0  40))
(assert (<= v1_0_t  40))
(declare-fun v1_1_0 () Real)
(declare-fun v1_1_t () Real)
(assert (>= v1_1_0  0))
(assert (>= v1_1_t  0))
(assert (<= v1_1_0  40))
(assert (<= v1_1_t  40))
(declare-fun v1_2_0 () Real)
(declare-fun v1_2_t () Real)
(assert (>= v1_2_0  0))
(assert (>= v1_2_t  0))
(assert (<= v1_2_0  40))
(assert (<= v1_2_t  40))
(declare-fun v1_3_0 () Real)
(declare-fun v1_3_t () Real)
(assert (>= v1_3_0  0))
(assert (>= v1_3_t  0))
(assert (<= v1_3_0  40))
(assert (<= v1_3_t  40))
(declare-fun v1_4_0 () Real)
(declare-fun v1_4_t () Real)
(assert (>= v1_4_0  0))
(assert (>= v1_4_t  0))
(assert (<= v1_4_0  40))
(assert (<= v1_4_t  40))
(declare-fun v2 () Real)
(declare-fun v2_0_0 () Real)
(declare-fun v2_0_t () Real)
(assert (>= v2_0_0  0))
(assert (>= v2_0_t  0))
(assert (<= v2_0_0  40))
(assert (<= v2_0_t  40))
(declare-fun v2_1_0 () Real)
(declare-fun v2_1_t () Real)
(assert (>= v2_1_0  0))
(assert (>= v2_1_t  0))
(assert (<= v2_1_0  40))
(assert (<= v2_1_t  40))
(declare-fun v2_2_0 () Real)
(declare-fun v2_2_t () Real)
(assert (>= v2_2_0  0))
(assert (>= v2_2_t  0))
(assert (<= v2_2_0  40))
(assert (<= v2_2_t  40))
(declare-fun v2_3_0 () Real)
(declare-fun v2_3_t () Real)
(assert (>= v2_3_0  0))
(assert (>= v2_3_t  0))
(assert (<= v2_3_0  40))
(assert (<= v2_3_t  40))
(declare-fun v2_4_0 () Real)
(declare-fun v2_4_t () Real)
(assert (>= v2_4_0  0))
(assert (>= v2_4_t  0))
(assert (<= v2_4_0  40))
(assert (<= v2_4_t  40))
(declare-fun time_0 () Real)
(assert (>= time_0  0))
(assert (<= time_0  60))
(declare-fun time_1 () Real)
(assert (>= time_1  0))
(assert (<= time_1  60))
(declare-fun time_2 () Real)
(assert (>= time_2  0))
(assert (<= time_2  60))
(declare-fun time_3 () Real)
(assert (>= time_3  0))
(assert (<= time_3  60))
(declare-fun time_4 () Real)
(assert (>= time_4  0))
(assert (<= time_4  60))
(define-ode flow_1 ((= d/dt[ad1]  0)(= d/dt[ad2]  0)(= d/dt[mu1]  0)(= d/dt[s1] (+ 11.12(* 3 tau)))(= d/dt[s2]  11.12)(= d/dt[sigma1]  0)(= d/dt[tau]  1.0)(= d/dt[v01]  0.0)(= d/dt[v02]  0.0)(= d/dt[v1]  3)(= d/dt[v2]  0.0)))
(define-ode flow_2 ((= d/dt[ad1]  0)(= d/dt[ad2]  0)(= d/dt[mu1]  0)(= d/dt[s1] (+ v01(*(+(* ad1 sigma1) mu1) tau)))(= d/dt[s2]  v02)(= d/dt[sigma1]  0)(= d/dt[tau]  1.0)(= d/dt[v01]  0.0)(= d/dt[v02]  0.0)(= d/dt[v1] (+(* ad1 sigma1) mu1))(= d/dt[v2]  0.0)))
(define-ode flow_3 ((= d/dt[ad1]  0)(= d/dt[ad2]  0.0)(= d/dt[mu1]  0)(= d/dt[s1] (+ v01(*(+(* ad1 sigma1) mu1) tau)))(= d/dt[s2] (+ v02(* ad2 tau)))(= d/dt[sigma1]  0)(= d/dt[tau]  1.0)(= d/dt[v01]  0.0)(= d/dt[v02]  0.0)(= d/dt[v1] (+(* ad1 sigma1) mu1))(= d/dt[v2]  ad2)))
(define-ode flow_4 ((= d/dt[ad1]  0)(= d/dt[ad2]  0.0)(= d/dt[mu1]  0)(= d/dt[s1]  0)(= d/dt[s2] (+ v02(* ad2 tau)))(= d/dt[sigma1]  0)(= d/dt[tau]  1.0)(= d/dt[v01]  0.0)(= d/dt[v02]  0.0)(= d/dt[v1]  0)(= d/dt[v2]  ad2)))
(define-ode flow_6 ((= d/dt[ad1]  0)(= d/dt[ad2]  0.0)(= d/dt[mu1]  0)(= d/dt[s1]  0)(= d/dt[s2]  0)(= d/dt[sigma1]  0)(= d/dt[tau]  0.0)(= d/dt[v01]  0)(= d/dt[v02]  0)(= d/dt[v1]  0)(= d/dt[v2]  0)))
(assert (and 
((and(= s1_0_0 0)(= s2_0_0(+ 0(* v01_0_0 1.0)))(= v1_0_0 11.12)(= v2_0_0 11.12)(= v01_0_0 11.12)(= v02_0_0 11.12)(= tau_0_0 0)))
(>= mu1_0_0 -2.05)
(<= mu1_0_0 -2)
(>= mu1_0_t -2.05)
(<= mu1_0_t -2)
(>= sigma1_0_0 0.2)
(<= sigma1_0_0 0.25)
(>= sigma1_0_t 0.2)
(<= sigma1_0_t 0.25)
(>= mu1_1_0 -2.05)
(<= mu1_1_0 -2)
(>= mu1_1_t -2.05)
(<= mu1_1_t -2)
(>= sigma1_1_0 0.2)
(<= sigma1_1_0 0.25)
(>= sigma1_1_t 0.2)
(<= sigma1_1_t 0.25)
(>= mu1_2_0 -2.05)
(<= mu1_2_0 -2)
(>= mu1_2_t -2.05)
(<= mu1_2_t -2)
(>= sigma1_2_0 0.2)
(<= sigma1_2_0 0.25)
(>= sigma1_2_t 0.2)
(<= sigma1_2_t 0.25)
(>= mu1_3_0 -2.05)
(<= mu1_3_0 -2)
(>= mu1_3_t -2.05)
(<= mu1_3_t -2)
(>= sigma1_3_0 0.2)
(<= sigma1_3_0 0.25)
(>= sigma1_3_t 0.2)
(<= sigma1_3_t 0.25)
(>= mu1_4_0 -2.05)
(<= mu1_4_0 -2)
(>= mu1_4_t -2.05)
(<= mu1_4_t -2)
(>= sigma1_4_0 0.2)
(<= sigma1_4_0 0.25)
(>= sigma1_4_t 0.2)
(<= sigma1_4_t 0.25)
(>= ad1_0_0 0.921875)
(<= ad1_0_0 1.10625)
(>= ad1_0_t 0.921875)
(<= ad1_0_t 1.10625)
(>= ad1_1_0 0.921875)
(<= ad1_1_0 1.10625)
(>= ad1_1_t 0.921875)
(<= ad1_1_t 1.10625)
(>= ad1_2_0 0.921875)
(<= ad1_2_0 1.10625)
(>= ad1_2_t 0.921875)
(<= ad1_2_t 1.10625)
(>= ad1_3_0 0.921875)
(<= ad1_3_0 1.10625)
(>= ad1_3_t 0.921875)
(<= ad1_3_t 1.10625)
(>= ad1_4_0 0.921875)
(<= ad1_4_0 1.10625)
(>= ad1_4_t 0.921875)
(<= ad1_4_t 1.10625)
(= [ad1_0_t ad2_0_t mu1_0_t s1_0_t s2_0_t sigma1_0_t tau_0_t v01_0_t v02_0_t v1_0_t v2_0_t ] (integral 0.0 time_0 [ad1_0_0 ad2_0_0 mu1_0_0 s1_0_0 s2_0_0 sigma1_0_0 tau_0_0 v01_0_0 v02_0_0 v1_0_0 v2_0_0 ] flow_1))
(= s1_0_t(+ s2_0_t(* v2_0_t 1.0)))
(= ad1_1_0  ad1_0_t)(= ad2_1_0  ad2_0_t)(= mu1_1_0  mu1_0_t)(= s1_1_0  s1_0_t)(= s2_1_0  s2_0_t)(= sigma1_1_0  sigma1_0_t)(= tau_1_0  0)(= v01_1_0  v1_0_t)(= v02_1_0  v2_0_t)(= v1_1_0  v1_0_t)(= v2_1_0  v2_0_t)(= [ad1_1_t ad2_1_t mu1_1_t s1_1_t s2_1_t sigma1_1_t tau_1_t v01_1_t v02_1_t v1_1_t v2_1_t ] (integral 0.0 time_1 [ad1_1_0 ad2_1_0 mu1_1_0 s1_1_0 s2_1_0 sigma1_1_0 tau_1_0 v01_1_0 v02_1_0 v1_1_0 v2_1_0 ] flow_2))
(= tau_1_t 1.5)
(= ad1_2_0  ad1_1_t)(= ad2_2_0  ad2_1_t)(= mu1_2_0  mu1_1_t)(= s1_2_0  s1_1_t)(= s2_2_0  s2_1_t)(= sigma1_2_0  sigma1_1_t)(= tau_2_0  0)(= v01_2_0  v1_1_t)(= v02_2_0  v2_1_t)(= v1_2_0  v1_1_t)(= v2_2_0  v2_1_t)(= [ad1_2_t ad2_2_t mu1_2_t s1_2_t s2_2_t sigma1_2_t tau_2_t v01_2_t v02_2_t v1_2_t v2_2_t ] (integral 0.0 time_2 [ad1_2_0 ad2_2_0 mu1_2_0 s1_2_0 s2_2_0 sigma1_2_0 tau_2_0 v01_2_0 v02_2_0 v1_2_0 v2_2_0 ] flow_3))
(= v1_2_t 0)
(= ad1_3_0  ad1_2_t)(= ad2_3_0  ad2_2_t)(= mu1_3_0  mu1_2_t)(= s1_3_0  s1_2_t)(= s2_3_0  s2_2_t)(= sigma1_3_0  sigma1_2_t)(= tau_3_0  0)(= v01_3_0  v1_2_t)(= v02_3_0  v2_2_t)(= v1_3_0  v1_2_t)(= v2_3_0  v2_2_t)(= [ad1_3_t ad2_3_t mu1_3_t s1_3_t s2_3_t sigma1_3_t tau_3_t v01_3_t v02_3_t v1_3_t v2_3_t ] (integral 0.0 time_3 [ad1_3_0 ad2_3_0 mu1_3_0 s1_3_0 s2_3_0 sigma1_3_0 tau_3_0 v01_3_0 v02_3_0 v1_3_0 v2_3_0 ] flow_4))
(= v2_3_t 0)
(= ad1_4_0  ad1_3_t)(= ad2_4_0  ad2_3_t)(= mu1_4_0  mu1_3_t)(= s1_4_0  s1_3_t)(= s2_4_0  s2_3_t)(= sigma1_4_0  sigma1_3_t)(= tau_4_0  0)(= v01_4_0  v1_3_t)(= v02_4_0  v2_3_t)(= v1_4_0  v1_3_t)(= v2_4_0  v2_3_t)(= [ad1_4_t ad2_4_t mu1_4_t s1_4_t s2_4_t sigma1_4_t tau_4_t v01_4_t v02_4_t v1_4_t v2_4_t ] (integral 0.0 time_4 [ad1_4_0 ad2_4_0 mu1_4_0 s1_4_0 s2_4_0 sigma1_4_0 tau_4_0 v01_4_0 v02_4_0 v1_4_0 v2_4_0 ] flow_6))
((< s1_4_t(- s2_4_t 5)))))
(check-sat)
(exit)
