#include <stdio.h>
//#include <crtdbg.h>
//#include <Windows.h>
#include <memory>
#include <vector>

#include "GpDataset.h"
#include "AnalyticApproximation.h"
#include "SmmcOptions.h"
#include "SmoothedModelCheker.h"
#include "ProbitRegressionPosterior.h"

//#include <gsl/gsl_blas.h>
//#include <gsl/gsl_multimin.h>
//#include <gsl/gsl_math.h>
//#include <gsl/gsl_ieee_utils.h>

#include "DebugLogMatrix.h"

using namespace std;


void test() {
	double beta = 2.0;
	const int ncolumns = 1;
	double x_points[][ncolumns] = { {0.005},
{0.005979899497487437},
{0.006959798994974875},
{0.007939698492462312},
{0.00891959798994975},
{0.009899497487437188},
{0.010879396984924626},
{0.011859296482412063},
{0.012839195979899501},
{0.013819095477386939},
{0.014798994974874377},
{0.015778894472361814},
{0.01675879396984925},
{0.017738693467336687},
{0.018718592964824123},
{0.01969849246231156},
{0.020678391959798995},
{0.02165829145728643},
{0.022638190954773867},
{0.023618090452261303},
{0.02459798994974874}, 
{0.025577889447236175},
{0.02655778894472361},
{0.027537688442211047},
{0.028517587939698483},
{0.02949748743718592},
{0.030477386934673355},
{0.031457286432160794},
{0.032437185929648234},
{0.03341708542713567},
{0.03439698492462311},
{0.03537688442211055},
{0.03635678391959799},
{0.03733668341708543},
{0.03831658291457287},
{0.03929648241206031},
{0.04027638190954775},
{0.04125628140703519},
{0.04223618090452263},
{0.04321608040201007},
{0.04419597989949751},//40
{0.04517587939698495},
{0.046155778894472387},
{0.047135678391959826},
{0.048115577889447265},
{0.049095477386934705},
{0.050075376884422144},
{0.051055276381909584},
{0.05203517587939702},
{0.05301507537688446},
{0.0539949748743719},
{0.05497487437185934},
{0.05595477386934678},
{0.05693467336683422},
{0.05791457286432166},
{0.0588944723618091},
{0.05987437185929654},
{0.06085427135678398},
{0.06183417085427142},
{0.06281407035175886},
{0.06379396984924629},
{0.06477386934673372},
{0.06575376884422116},
{0.06673366834170859},
{0.06771356783919602},
{0.06869346733668345},
{0.06967336683417089},
{0.07065326633165832},
{0.07163316582914575},
{0.07261306532663318},
{0.07359296482412062},
{0.07457286432160805},
{0.07555276381909548},
{0.07653266331658291},
{0.07751256281407035},
{0.07849246231155778},
{0.07947236180904521},
{0.08045226130653264},
{0.08143216080402008},
{0.08241206030150751},
{0.08339195979899494},
{0.08437185929648237},
{0.0853517587939698},
{0.08633165829145724},
{0.08731155778894467},
{0.0882914572864321},
{0.08927135678391954},
{0.09025125628140697},
{0.0912311557788944},
{0.09221105527638183},
{0.09319095477386927},
{0.0941708542713567},
{0.09515075376884413},
{0.09613065326633156},
{0.097110552763819},
{0.09809045226130643},
{0.09907035175879386},
{0.1000502512562813},
{0.10103015075376873},
{0.10201005025125616},
{0.10298994974874359},
{0.10396984924623102},//100
{0.10494974874371846},
{0.10592964824120589},
{0.10690954773869332},
{0.10788944723618075},
{0.10886934673366819},
{0.10984924623115562},
{0.11082914572864305},
{0.11180904522613049},
{0.11278894472361792},
{0.11376884422110535},
{0.11474874371859278},
{0.11572864321608022},
{0.11670854271356765},
{0.11768844221105508},
{0.11866834170854251},
{0.11964824120602995},
{0.12062814070351738},
{0.12160804020100481},
{0.12258793969849224},
{0.12356783919597968},
{0.12454773869346711},
{0.12552763819095455},
{0.126507537688442},
{0.12748743718592945},
{0.1284673366834169},
{0.12944723618090434},
{0.1304271356783918},
{0.13140703517587923},
{0.13238693467336668},
{0.13336683417085413},
{0.13434673366834157},
{0.13532663316582902},
{0.13630653266331647},
{0.1372864321608039},
{0.13826633165829136},
{0.1392462311557788},
{0.14022613065326625},
{0.1412060301507537},
{0.14218592964824114},
{0.1431658291457286},
{0.14414572864321604},
{0.14512562814070348},
{0.14610552763819093},
{0.14708542713567838},
{0.14806532663316582},
{0.14904522613065327},
{0.15002512562814072},
{0.15100502512562816},
{0.1519849246231156},
{0.15296482412060305},//150
{0.1539447236180905},
{0.15492462311557795},
{0.1559045226130654},
{0.15688442211055284},
{0.1578643216080403},
{0.15884422110552773},
{0.15982412060301518},
{0.16080402010050263},
{0.16178391959799007},
{0.16276381909547752},
{0.16374371859296497},
{0.1647236180904524},
{0.16570351758793986},
{0.1666834170854273},
{0.16766331658291475},
{0.1686432160804022},
{0.16962311557788964},
{0.1706030150753771},
{0.17158291457286454},
{0.17256281407035198},
{0.17354271356783943},
{0.17452261306532688},
{0.17550251256281432},
{0.17648241206030177},
{0.17746231155778922},
{0.17844221105527666},
{0.1794221105527641},
{0.18040201005025155},
{0.181381909547739},
{0.18236180904522645},
{0.1833417085427139},
{0.18432160804020134},
{0.1853015075376888},
{0.18628140703517623},
{0.18726130653266368},
{0.18824120603015113},
{0.18922110552763857},
{0.19020100502512602},
{0.19118090452261347},
{0.1921608040201009},//190

	{0.2} };
	// набор из письма
	double y_points[] = { 0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.01,
0.0,
0.0,
0.0,
0.0,
0.0,
0.02,
0.03,
0.01,
0.01,
0.06,
0.03,
0.06,
0.05,
0.06,
0.07,
0.08,
0.08,
0.03,
0.09,
0.1,
0.09,
0.08,
0.09,
0.09,
0.14,
0.08,
0.14,
0.13,
0.11,
0.21,
0.11,
0.19,
0.21,
0.21,
0.25,
0.24,
0.23,
0.16,
0.14,
0.16,
0.24,
0.25,
0.28,
0.19,
0.25,
0.17,
0.15,
0.15,
0.16,
0.15,
0.15,
0.2,
0.19,
0.2,
0.26,
0.18,
0.12,
0.18,
0.15,
0.12,
0.09,
0.16,
0.07,
0.07,
0.11,
0.1,
0.1,
0.19,
0.09,
0.12,
0.1,
0.08,
0.11,
0.07,
0.04,
0.11,
0.07,
0.07,
0.08,
0.11,
0.1,
0.04,
0.02,
0.07,
0.02,
0.04,
0.02,
0.06,
0.03,
0.02,
0.04,
0.05,
0.01,
0.0,
0.01,
0.05,
0.04,
0.03,
0.03,
0.06,
0.01,
0.02,
0.0,
0.06,
0.01,
0.01,
0.02,
0.02,
0.0,
0.0,
0.03,
0.01,
0.02,
0.01,
0.0,
0.0,
0.01,
0.01,
0.0,
0.0,
0,
0.01,
0.0,
0.0,
0.01,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.02,
0.0,
0.01,
0.01,
0.0,
0.0,
0.01,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.0,
0.01,
0.0,
0.0,
0.0,
0.0,
0.0 };

	double xt_points[][ncolumns] = { {0.005},
{0.005979899497487437},
{0.006959798994974875},
{0.007939698492462312},
{0.00891959798994975},
{0.009899497487437188},
{0.010879396984924626},
{0.011859296482412063},
{0.012839195979899501},
{0.013819095477386939},
{0.014798994974874377},
{0.015778894472361814},
{0.01675879396984925},
{0.017738693467336687},
{0.018718592964824123},
{0.01969849246231156},
{0.020678391959798995},
{0.02165829145728643},
{0.022638190954773867},
{0.023618090452261303},
{0.02459798994974874}, 
{0.025577889447236175},
{0.02655778894472361},
{0.027537688442211047},
{0.028517587939698483},
{0.02949748743718592},
{0.030477386934673355},
{0.031457286432160794},
{0.032437185929648234},
{0.03341708542713567},
{0.03439698492462311},
{0.03537688442211055},
{0.03635678391959799},
{0.03733668341708543},
{0.03831658291457287},
{0.03929648241206031},
{0.04027638190954775},
{0.04125628140703519},
{0.04223618090452263},
{0.04321608040201007},
{0.04419597989949751},//40
{0.04517587939698495},
{0.046155778894472387},
{0.047135678391959826},
{0.048115577889447265},
{0.049095477386934705},
{0.050075376884422144},
{0.051055276381909584},
{0.05203517587939702},
{0.05301507537688446},
{0.0539949748743719},
{0.05497487437185934},
{0.05595477386934678},
{0.05693467336683422},
{0.05791457286432166},
{0.0588944723618091},
{0.05987437185929654},
{0.06085427135678398},
{0.06183417085427142},
{0.06281407035175886},
{0.06379396984924629},
{0.06477386934673372},
{0.06575376884422116},
{0.06673366834170859},
{0.06771356783919602},
{0.06869346733668345},
{0.06967336683417089},
{0.07065326633165832},
{0.07163316582914575},
{0.07261306532663318},
{0.07359296482412062},
{0.07457286432160805},
{0.07555276381909548},
{0.07653266331658291},
{0.07751256281407035},
{0.07849246231155778},
{0.07947236180904521},
{0.08045226130653264},
{0.08143216080402008},
{0.08241206030150751},
{0.08339195979899494},
{0.08437185929648237},
{0.0853517587939698},
{0.08633165829145724},
{0.08731155778894467},
{0.0882914572864321},
{0.08927135678391954},
{0.09025125628140697},
{0.0912311557788944},
{0.09221105527638183},
{0.09319095477386927},
{0.0941708542713567},
{0.09515075376884413},
{0.09613065326633156},
{0.097110552763819},
{0.09809045226130643},
{0.09907035175879386},
{0.1000502512562813},
{0.10103015075376873},
{0.10201005025125616},
{0.10298994974874359},
{0.10396984924623102},//100
{0.10494974874371846},
{0.10592964824120589},
{0.10690954773869332},
{0.10788944723618075},
{0.10886934673366819},
{0.10984924623115562},
{0.11082914572864305},
{0.11180904522613049},
{0.11278894472361792},
{0.11376884422110535},
{0.11474874371859278},
{0.11572864321608022},
{0.11670854271356765},
{0.11768844221105508},
{0.11866834170854251},
{0.11964824120602995},
{0.12062814070351738},
{0.12160804020100481},
{0.12258793969849224},
{0.12356783919597968},
{0.12454773869346711},
{0.12552763819095455},
{0.126507537688442},
{0.12748743718592945},
{0.1284673366834169},
{0.12944723618090434},
{0.1304271356783918},
{0.13140703517587923},
{0.13238693467336668},
{0.13336683417085413},
{0.13434673366834157},
{0.13532663316582902},
{0.13630653266331647},
{0.1372864321608039},
{0.13826633165829136},
{0.1392462311557788},
{0.14022613065326625},
{0.1412060301507537},
{0.14218592964824114},
{0.1431658291457286},
{0.14414572864321604},
{0.14512562814070348},
{0.14610552763819093},
{0.14708542713567838},
{0.14806532663316582},
{0.14904522613065327},
{0.15002512562814072},
{0.15100502512562816},
{0.1519849246231156},
{0.15296482412060305},//150
{0.1539447236180905},
{0.15492462311557795},
{0.1559045226130654},
{0.15688442211055284},
{0.1578643216080403},
{0.15884422110552773},
{0.15982412060301518},
{0.16080402010050263},
{0.16178391959799007},
{0.16276381909547752},
{0.16374371859296497},
{0.1647236180904524},
{0.16570351758793986},
{0.1666834170854273},
{0.16766331658291475},
{0.1686432160804022},
{0.16962311557788964},
{0.1706030150753771},
{0.17158291457286454},
{0.17256281407035198},
{0.17354271356783943},
{0.17452261306532688},
{0.17550251256281432},
{0.17648241206030177},
{0.17746231155778922},
{0.17844221105527666},
{0.1794221105527641},
{0.18040201005025155},
{0.181381909547739},
{0.18236180904522645},
{0.1833417085427139},
{0.18432160804020134},
{0.1853015075376888},
{0.18628140703517623},
{0.18726130653266368},
{0.18824120603015113},
{0.18922110552763857},
{0.19020100502512602},
{0.19118090452261347},
{0.1921608040201009},//190

	{0.2} };

	vector<vector<double> > x(1), *xt;
	vector<double> y;
	x.resize(sizeof(x_points) / sizeof(x_points[0]));
	y.resize(sizeof(y_points) / sizeof(y_points[0]));
	xt = new std::vector<std::vector<double> >();
	xt->resize(sizeof(xt_points) / sizeof(xt_points[0]));
	for (size_t i = 0; i < x.size(); i++) {
		x[i].resize(ncolumns);
		for (size_t j = 0; j < ncolumns; j++) {
			x[i][j] = x_points[i][j];
		}
	};
	for (size_t i = 0; i < xt->size(); i++) {
		(*xt)[i].resize(ncolumns);
		for (size_t j = 0; j < ncolumns; j++) {
			(*xt)[i][j] = xt_points[i][j];
		}
	};
	copy(&y_points[0], &y_points[y.size()], y.begin());

	shared_ptr<GpDataset> dataset = make_shared<GpDataset>(x, y);
	shared_ptr<SmmcOptions> options = make_shared<SmmcOptions>(ncolumns + 1);
	shared_ptr<SmoothedModelCheker> mc = make_shared<SmoothedModelCheker>();
	std::vector<std::shared_ptr<Parameter> > params;
	shared_ptr<AnalyticApproximation> approx = mc->getAnalyticApproximation(dataset, params, options);
	std::shared_ptr<std::vector<std::vector<double> > > ptr_xt(xt);
	shared_ptr<ProbitRegressionPosterior> result = approx->getValuesAt(ptr_xt);
	DebugLogMatrix::printMatrix("getClassProbabilities", __LINE__, result->getClassProbabilities());
	DebugLogMatrix::printMatrix("getLowerBound(beta)", __LINE__, result->getLowerBound(beta));
	DebugLogMatrix::printMatrix("getUpperBound(beta)", __LINE__, result->getUpperBound(beta));
}

int main(int argc, char* argv[]) {
	//const gsl_multimin_fminimizer_type *T = gsl_multimin_fminimizer_nmsimplex;
	//gsl_multimin_fminimizer *s = NULL;
	//s = gsl_multimin_fminimizer_alloc(T, 2);
	//gsl_multimin_fminimizer_free(s);
	test();
	//	_CrtDumpMemoryLeaks();
	//	::system("pause");
	return 0;
}

